<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="28" passed="27" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[CHECKING LOGIN WITH VALID EMAIL AND VAILD PASSWORD<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
    </line>
    <line>
      <![CDATA[CHECKING NULL COMPANY NAME<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
    </line>
    <line>
      <![CDATA[CHECKING INVALID TEXT EMAIL FOR COMPANY<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
    </line>
    <line>
      <![CDATA[CHECKING INVALID NUMBER EMAIL FOR COMPANY<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
    </line>
    <line>
      <![CDATA[CHECKING INVALID SPECIAL CHARACTER EMAIL FOR COMPANY<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
    </line>
    <line>
      <![CDATA[CHECKING INVALID TEXT IN WEBSITE FOR COMPANY<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
    </line>
    <line>
      <![CDATA[CHECKING NUMBER IN WEBSITE FOR COMPANY<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
    </line>
    <line>
      <![CDATA[CHECKING SPECIAL CHARACTERS IN WEBSITE FOR COMPANY<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
    </line>
    <line>
      <![CDATA[CHECKING SPECIAL CHARACTERS IN WEBSITE FOR COMPANY<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
    </line>
    <line>
      <![CDATA[CHECKING SHORT PHONE NUMBERS FOR COMPANY<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
    </line>
    <line>
      <![CDATA[CHECKING NUMBERS IN CITY FOR COMPANY<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
    </line>
    <line>
      <![CDATA[CHECKING SPECIAL CHARACTERS IN CITY FOR COMPANY<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
    </line>
    <line>
      <![CDATA[CHECKING COMBINATION OF NUMBERS AND SPECIAL CHARACTERS IN CITY FOR COMPANY<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
    </line>
    <line>
      <![CDATA[CHECKING NUMBERS IN STATE FOR COMPANY<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
    </line>
    <line>
      <![CDATA[CHECKING SPECIAL CHARACTERS IN STATE FOR COMPANY<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
    </line>
    <line>
      <![CDATA[CHECKING COMBINATION OF NUMBERS AND SPECIAL CHARACTERS IN STATE FOR COMPANY<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
    </line>
    <line>
      <![CDATA[CHECKING SHORT IN PIN CODE FOR COMPANY<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
    </line>
    <line>
      <![CDATA[CHECKING NEW PERSON NAME NULL IN COMPANY<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
    </line>
    <line>
      <![CDATA[CHECKING NEW PERSON EMAIL IS INVALID TEXT IN COMPANY<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
    </line>
    <line>
      <![CDATA[CHECKING NEW PERSON EMAIL IS INVALID NUMBER IN COMPANY<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
    </line>
    <line>
      <![CDATA[CHECKING NEW PERSON EMAIL IS SPECIAL CHARACTER IN COMPANY<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
    </line>
    <line>
      <![CDATA[CHECKING NEW PERSON MOBILE NUMBER IS TEXT IN COMPANY<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
    </line>
    <line>
      <![CDATA[CHECKING ADD COMPANY WITHOUT PERSON<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
    </line>
    <line>
      <![CDATA[CHECKING ADD COMPANY WITH EXISTING PERSON<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
    </line>
    <line>
      <![CDATA[CHECKING ADD COMPANY WITH MULTIPLE EXISTING PERSON<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
    </line>
    <line>
      <![CDATA[CHECKING ADD COMPANY WITH NEW PERSON<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
    </line>
    <line>
      <![CDATA[CHECKING EDIT COMPANY FROM CARD OPTION<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
    </line>
    <line>
      <![CDATA[CHECKING EDIT COMPANY FROM INNER PAGE<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
    </line>
  </reporter-output>
  <suite started-at="2022-11-15T18:17:31 IST" name="Default suite" finished-at="2022-11-15T18:23:45 IST" duration-ms="373945">
    <groups>
      <group name="smoke">
        <method signature="Company.test0023_checkAddCompWoPerson()[pri:0, instance:libra_Module.Company@437da279]" name="test0023_checkAddCompWoPerson" class="libra_Module.Company"/>
        <method signature="Company.test0024_checkAddCompWithExPerson()[pri:0, instance:libra_Module.Company@437da279]" name="test0024_checkAddCompWithExPerson" class="libra_Module.Company"/>
        <method signature="Company.test0025_checkAddCompWithMulExPerson()[pri:0, instance:libra_Module.Company@437da279]" name="test0025_checkAddCompWithMulExPerson" class="libra_Module.Company"/>
        <method signature="Company.test0026_checkAddCompWithNewPerson()[pri:0, instance:libra_Module.Company@437da279]" name="test0026_checkAddCompWithNewPerson" class="libra_Module.Company"/>
        <method signature="Company.test0027_checkEditCompFromCard()[pri:0, instance:libra_Module.Company@437da279]" name="test0027_checkEditCompFromCard" class="libra_Module.Company"/>
        <method signature="Company.test0028_checkEditCompInnerPageEditCompInnerPage()[pri:0, instance:libra_Module.Company@437da279]" name="test0028_checkEditCompInnerPageEditCompInnerPage" class="libra_Module.Company"/>
      </group> <!-- smoke -->
      <group name="sanity">
        <method signature="Company.test0001_checkLogin()[pri:0, instance:libra_Module.Company@437da279]" name="test0001_checkLogin" class="libra_Module.Company"/>
        <method signature="Company.test0002_checkNullCompanyName()[pri:0, instance:libra_Module.Company@437da279]" name="test0002_checkNullCompanyName" class="libra_Module.Company"/>
        <method signature="Company.test0003_checkInvalidTextEMailCompany()[pri:0, instance:libra_Module.Company@437da279]" name="test0003_checkInvalidTextEMailCompany" class="libra_Module.Company"/>
        <method signature="Company.test0004_checkInvalidNumEMailCompany()[pri:0, instance:libra_Module.Company@437da279]" name="test0004_checkInvalidNumEMailCompany" class="libra_Module.Company"/>
        <method signature="Company.test0005_checkInvalidSpecharEMailCompany()[pri:0, instance:libra_Module.Company@437da279]" name="test0005_checkInvalidSpecharEMailCompany" class="libra_Module.Company"/>
        <method signature="Company.test0006_checkInvalidTextWebCompany()[pri:0, instance:libra_Module.Company@437da279]" name="test0006_checkInvalidTextWebCompany" class="libra_Module.Company"/>
        <method signature="Company.test0007_checkInvalidNumWebCompany()[pri:0, instance:libra_Module.Company@437da279]" name="test0007_checkInvalidNumWebCompany" class="libra_Module.Company"/>
        <method signature="Company.test0008_checkInvalidSpecCharWebCompany()[pri:0, instance:libra_Module.Company@437da279]" name="test0008_checkInvalidSpecCharWebCompany" class="libra_Module.Company"/>
        <method signature="Company.test0009_checkInvalidTextMobileCompany()[pri:0, instance:libra_Module.Company@437da279]" name="test0009_checkInvalidTextMobileCompany" class="libra_Module.Company"/>
        <method signature="Company.test0010_checkShortPhoneNumCompany()[pri:0, instance:libra_Module.Company@437da279]" name="test0010_checkShortPhoneNumCompany" class="libra_Module.Company"/>
        <method signature="Company.test0011_checkCityNumbersCompany()[pri:0, instance:libra_Module.Company@437da279]" name="test0011_checkCityNumbersCompany" class="libra_Module.Company"/>
        <method signature="Company.test0012_checkCitySpecCharCompany()[pri:0, instance:libra_Module.Company@437da279]" name="test0012_checkCitySpecCharCompany" class="libra_Module.Company"/>
        <method signature="Company.test0013_checkCityNumSpecCharTextCompany()[pri:0, instance:libra_Module.Company@437da279]" name="test0013_checkCityNumSpecCharTextCompany" class="libra_Module.Company"/>
        <method signature="Company.test0014_checkStateNumbersCompany()[pri:0, instance:libra_Module.Company@437da279]" name="test0014_checkStateNumbersCompany" class="libra_Module.Company"/>
        <method signature="Company.test0015_checkStateSpecCharCompany()[pri:0, instance:libra_Module.Company@437da279]" name="test0015_checkStateSpecCharCompany" class="libra_Module.Company"/>
        <method signature="Company.test0016_checkStateNumSpecCharTextCompany()[pri:0, instance:libra_Module.Company@437da279]" name="test0016_checkStateNumSpecCharTextCompany" class="libra_Module.Company"/>
        <method signature="Company.test0017_checkShortPinCompany()[pri:0, instance:libra_Module.Company@437da279]" name="test0017_checkShortPinCompany" class="libra_Module.Company"/>
        <method signature="Company.test0018_checkNewPersonNameNull()[pri:0, instance:libra_Module.Company@437da279]" name="test0018_checkNewPersonNameNull" class="libra_Module.Company"/>
        <method signature="Company.test0019_checkNewPersonInvalidTextEmail()[pri:0, instance:libra_Module.Company@437da279]" name="test0019_checkNewPersonInvalidTextEmail" class="libra_Module.Company"/>
        <method signature="Company.test0020_checkNewPersonInvalidNumberEmail()[pri:0, instance:libra_Module.Company@437da279]" name="test0020_checkNewPersonInvalidNumberEmail" class="libra_Module.Company"/>
        <method signature="Company.test0021_checkNewPersonInvalidSpecialCharEmail()[pri:0, instance:libra_Module.Company@437da279]" name="test0021_checkNewPersonInvalidSpecialCharEmail" class="libra_Module.Company"/>
        <method signature="Company.test0022_checkNewPersonInvalidTextMobile()[pri:0, instance:libra_Module.Company@437da279]" name="test0022_checkNewPersonInvalidTextMobile" class="libra_Module.Company"/>
      </group> <!-- sanity -->
    </groups>
    <test started-at="2022-11-15T18:17:31 IST" name="Default test" finished-at="2022-11-15T18:23:45 IST" duration-ms="373945">
      <class name="libra_Module.Company">
        <test-method is-config="true" signature="openbrowser()[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:17:31 IST" name="openbrowser" finished-at="2022-11-15T18:17:34 IST" duration-ms="3045" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbrowser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:17:34 IST" name="afterMethod" finished-at="2022-11-15T18:17:36 IST" duration-ms="1570" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Company.test0001_checkLogin()[pri:0, instance:libra_Module.Company@437da279] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test0001_checkLogin()[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:17:36 IST" name="test0001_checkLogin" finished-at="2022-11-15T18:17:41 IST" duration-ms="5808" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[CHECKING LOGIN WITH VALID EMAIL AND VAILD PASSWORD<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- test0001_checkLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:17:41 IST" name="afterMethod" finished-at="2022-11-15T18:17:43 IST" duration-ms="1648" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Company.test0002_checkNullCompanyName()[pri:0, instance:libra_Module.Company@437da279] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test0002_checkNullCompanyName()[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:17:43 IST" name="test0002_checkNullCompanyName" finished-at="2022-11-15T18:17:46 IST" duration-ms="2888" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[CHECKING NULL COMPANY NAME<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- test0002_checkNullCompanyName -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:17:46 IST" name="afterMethod" finished-at="2022-11-15T18:17:47 IST" duration-ms="1401" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Company.test0003_checkInvalidTextEMailCompany()[pri:0, instance:libra_Module.Company@437da279] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test0003_checkInvalidTextEMailCompany()[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:17:47 IST" name="test0003_checkInvalidTextEMailCompany" finished-at="2022-11-15T18:17:49 IST" duration-ms="2131" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[CHECKING INVALID TEXT EMAIL FOR COMPANY<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- test0003_checkInvalidTextEMailCompany -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:17:49 IST" name="afterMethod" finished-at="2022-11-15T18:17:51 IST" duration-ms="1281" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Company.test0004_checkInvalidNumEMailCompany()[pri:0, instance:libra_Module.Company@437da279] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test0004_checkInvalidNumEMailCompany()[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:17:51 IST" name="test0004_checkInvalidNumEMailCompany" finished-at="2022-11-15T18:17:53 IST" duration-ms="2051" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[CHECKING INVALID NUMBER EMAIL FOR COMPANY<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- test0004_checkInvalidNumEMailCompany -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:17:53 IST" name="afterMethod" finished-at="2022-11-15T18:17:54 IST" duration-ms="1021" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Company.test0005_checkInvalidSpecharEMailCompany()[pri:0, instance:libra_Module.Company@437da279] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test0005_checkInvalidSpecharEMailCompany()[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:17:54 IST" name="test0005_checkInvalidSpecharEMailCompany" finished-at="2022-11-15T18:17:56 IST" duration-ms="1779" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[CHECKING INVALID SPECIAL CHARACTER EMAIL FOR COMPANY<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- test0005_checkInvalidSpecharEMailCompany -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:17:56 IST" name="afterMethod" finished-at="2022-11-15T18:17:57 IST" duration-ms="1073" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Company.test0006_checkInvalidTextWebCompany()[pri:0, instance:libra_Module.Company@437da279] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test0006_checkInvalidTextWebCompany()[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:17:57 IST" name="test0006_checkInvalidTextWebCompany" finished-at="2022-11-15T18:17:59 IST" duration-ms="2771" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[CHECKING INVALID TEXT IN WEBSITE FOR COMPANY<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- test0006_checkInvalidTextWebCompany -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:17:59 IST" name="afterMethod" finished-at="2022-11-15T18:18:01 IST" duration-ms="1127" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Company.test0007_checkInvalidNumWebCompany()[pri:0, instance:libra_Module.Company@437da279] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test0007_checkInvalidNumWebCompany()[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:18:01 IST" name="test0007_checkInvalidNumWebCompany" finished-at="2022-11-15T18:18:03 IST" duration-ms="2589" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[CHECKING NUMBER IN WEBSITE FOR COMPANY<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- test0007_checkInvalidNumWebCompany -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:18:03 IST" name="afterMethod" finished-at="2022-11-15T18:18:04 IST" duration-ms="1029" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Company.test0008_checkInvalidSpecCharWebCompany()[pri:0, instance:libra_Module.Company@437da279] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test0008_checkInvalidSpecCharWebCompany()[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:18:04 IST" name="test0008_checkInvalidSpecCharWebCompany" finished-at="2022-11-15T18:18:07 IST" duration-ms="2477" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[CHECKING SPECIAL CHARACTERS IN WEBSITE FOR COMPANY<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- test0008_checkInvalidSpecCharWebCompany -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:18:07 IST" name="afterMethod" finished-at="2022-11-15T18:18:08 IST" duration-ms="1038" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Company.test0009_checkInvalidTextMobileCompany()[pri:0, instance:libra_Module.Company@437da279] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test0009_checkInvalidTextMobileCompany()[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:18:08 IST" name="test0009_checkInvalidTextMobileCompany" finished-at="2022-11-15T18:18:10 IST" duration-ms="2554" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[CHECKING SPECIAL CHARACTERS IN WEBSITE FOR COMPANY<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- test0009_checkInvalidTextMobileCompany -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:18:10 IST" name="afterMethod" finished-at="2022-11-15T18:18:11 IST" duration-ms="1104" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Company.test0010_checkShortPhoneNumCompany()[pri:0, instance:libra_Module.Company@437da279] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test0010_checkShortPhoneNumCompany()[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:18:11 IST" name="test0010_checkShortPhoneNumCompany" finished-at="2022-11-15T18:18:14 IST" duration-ms="2507" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[CHECKING SHORT PHONE NUMBERS FOR COMPANY<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- test0010_checkShortPhoneNumCompany -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:18:14 IST" name="afterMethod" finished-at="2022-11-15T18:18:15 IST" duration-ms="1432" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Company.test0011_checkCityNumbersCompany()[pri:0, instance:libra_Module.Company@437da279] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test0011_checkCityNumbersCompany()[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:18:15 IST" name="test0011_checkCityNumbersCompany" finished-at="2022-11-15T18:18:18 IST" duration-ms="2662" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[CHECKING NUMBERS IN CITY FOR COMPANY<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- test0011_checkCityNumbersCompany -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:18:18 IST" name="afterMethod" finished-at="2022-11-15T18:18:19 IST" duration-ms="1187" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Company.test0012_checkCitySpecCharCompany()[pri:0, instance:libra_Module.Company@437da279] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test0012_checkCitySpecCharCompany()[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:18:19 IST" name="test0012_checkCitySpecCharCompany" finished-at="2022-11-15T18:18:22 IST" duration-ms="2720" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[CHECKING SPECIAL CHARACTERS IN CITY FOR COMPANY<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- test0012_checkCitySpecCharCompany -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:18:22 IST" name="afterMethod" finished-at="2022-11-15T18:18:23 IST" duration-ms="1011" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Company.test0013_checkCityNumSpecCharTextCompany()[pri:0, instance:libra_Module.Company@437da279] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test0013_checkCityNumSpecCharTextCompany()[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:18:23 IST" name="test0013_checkCityNumSpecCharTextCompany" finished-at="2022-11-15T18:18:26 IST" duration-ms="2642" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[CHECKING COMBINATION OF NUMBERS AND SPECIAL CHARACTERS IN CITY FOR COMPANY<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- test0013_checkCityNumSpecCharTextCompany -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:18:26 IST" name="afterMethod" finished-at="2022-11-15T18:18:27 IST" duration-ms="1115" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Company.test0014_checkStateNumbersCompany()[pri:0, instance:libra_Module.Company@437da279] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test0014_checkStateNumbersCompany()[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:18:27 IST" name="test0014_checkStateNumbersCompany" finished-at="2022-11-15T18:18:29 IST" duration-ms="2567" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[CHECKING NUMBERS IN STATE FOR COMPANY<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- test0014_checkStateNumbersCompany -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:18:29 IST" name="afterMethod" finished-at="2022-11-15T18:18:30 IST" duration-ms="1106" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Company.test0015_checkStateSpecCharCompany()[pri:0, instance:libra_Module.Company@437da279] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test0015_checkStateSpecCharCompany()[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:18:30 IST" name="test0015_checkStateSpecCharCompany" finished-at="2022-11-15T18:18:33 IST" duration-ms="2709" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[CHECKING SPECIAL CHARACTERS IN STATE FOR COMPANY<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- test0015_checkStateSpecCharCompany -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:18:33 IST" name="afterMethod" finished-at="2022-11-15T18:18:34 IST" duration-ms="1032" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Company.test0016_checkStateNumSpecCharTextCompany()[pri:0, instance:libra_Module.Company@437da279] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test0016_checkStateNumSpecCharTextCompany()[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:18:34 IST" name="test0016_checkStateNumSpecCharTextCompany" finished-at="2022-11-15T18:18:37 IST" duration-ms="2593" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[CHECKING COMBINATION OF NUMBERS AND SPECIAL CHARACTERS IN STATE FOR COMPANY<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- test0016_checkStateNumSpecCharTextCompany -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:18:37 IST" name="afterMethod" finished-at="2022-11-15T18:18:38 IST" duration-ms="1139" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Company.test0017_checkShortPinCompany()[pri:0, instance:libra_Module.Company@437da279] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test0017_checkShortPinCompany()[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:18:38 IST" name="test0017_checkShortPinCompany" finished-at="2022-11-15T18:18:40 IST" duration-ms="2636" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[CHECKING SHORT IN PIN CODE FOR COMPANY<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- test0017_checkShortPinCompany -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:18:40 IST" name="afterMethod" finished-at="2022-11-15T18:18:41 IST" duration-ms="1052" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Company.test0018_checkNewPersonNameNull()[pri:0, instance:libra_Module.Company@437da279] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test0018_checkNewPersonNameNull()[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:18:41 IST" name="test0018_checkNewPersonNameNull" finished-at="2022-11-15T18:19:43 IST" duration-ms="61791" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//*[@class='parsley-required']"}
  (Session info: chrome=107.0.5304.107)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'DESKTOP-LHQEHTF', ip: '192.168.29.221', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.3'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [863a955e0ee99d10d1645c9aaf76813a, findElement {using=xpath, value=//*[@class='parsley-required']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 107.0.5304.107, chrome: {chromedriverVersion: 106.0.5249.61 (511755355844..., userDataDir: C:\Users\VAKILS~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:50318}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:50318/devtoo..., se:cdpVersion: 107.0.5304.107, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 863a955e0ee99d10d1645c9aaf76813a]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@class='parsley-required']"}
  (Session info: chrome=107.0.5304.107)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'DESKTOP-LHQEHTF', ip: '192.168.29.221', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.3'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [863a955e0ee99d10d1645c9aaf76813a, findElement {using=xpath, value=//*[@class='parsley-required']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 107.0.5304.107, chrome: {chromedriverVersion: 106.0.5249.61 (511755355844..., userDataDir: C:\Users\VAKILS~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:50318}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:50318/devtoo..., se:cdpVersion: 107.0.5304.107, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 863a955e0ee99d10d1645c9aaf76813a
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:365)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:357)
at selenium_module_Test.CommonFunctions.stringComparion(CommonFunctions.java:42)
at libra_Test.CompanyTest.NewPersonNameNull(CompanyTest.java:512)
at libra_Module.Company.test0018_checkNewPersonNameNull(Company.java:187)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
            <line>
              <![CDATA[CHECKING NEW PERSON NAME NULL IN COMPANY<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- test0018_checkNewPersonNameNull -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:19:43 IST" name="afterMethod" finished-at="2022-11-15T18:19:45 IST" duration-ms="1695" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Company.test0019_checkNewPersonInvalidTextEmail()[pri:0, instance:libra_Module.Company@437da279] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test0019_checkNewPersonInvalidTextEmail()[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:19:45 IST" name="test0019_checkNewPersonInvalidTextEmail" finished-at="2022-11-15T18:19:48 IST" duration-ms="2976" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[CHECKING NEW PERSON EMAIL IS INVALID TEXT IN COMPANY<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- test0019_checkNewPersonInvalidTextEmail -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:19:48 IST" name="afterMethod" finished-at="2022-11-15T18:19:49 IST" duration-ms="1042" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Company.test0020_checkNewPersonInvalidNumberEmail()[pri:0, instance:libra_Module.Company@437da279] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test0020_checkNewPersonInvalidNumberEmail()[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:19:49 IST" name="test0020_checkNewPersonInvalidNumberEmail" finished-at="2022-11-15T18:19:52 IST" duration-ms="2994" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[CHECKING NEW PERSON EMAIL IS INVALID NUMBER IN COMPANY<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- test0020_checkNewPersonInvalidNumberEmail -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:19:52 IST" name="afterMethod" finished-at="2022-11-15T18:19:53 IST" duration-ms="1020" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Company.test0021_checkNewPersonInvalidSpecialCharEmail()[pri:0, instance:libra_Module.Company@437da279] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test0021_checkNewPersonInvalidSpecialCharEmail()[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:19:53 IST" name="test0021_checkNewPersonInvalidSpecialCharEmail" finished-at="2022-11-15T18:19:56 IST" duration-ms="3007" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[CHECKING NEW PERSON EMAIL IS SPECIAL CHARACTER IN COMPANY<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- test0021_checkNewPersonInvalidSpecialCharEmail -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:19:56 IST" name="afterMethod" finished-at="2022-11-15T18:19:57 IST" duration-ms="1085" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Company.test0022_checkNewPersonInvalidTextMobile()[pri:0, instance:libra_Module.Company@437da279] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test0022_checkNewPersonInvalidTextMobile()[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:19:57 IST" name="test0022_checkNewPersonInvalidTextMobile" finished-at="2022-11-15T18:20:00 IST" duration-ms="3065" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[CHECKING NEW PERSON MOBILE NUMBER IS TEXT IN COMPANY<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- test0022_checkNewPersonInvalidTextMobile -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:20:00 IST" name="afterMethod" finished-at="2022-11-15T18:20:01 IST" duration-ms="1030" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Company.test0023_checkAddCompWoPerson()[pri:0, instance:libra_Module.Company@437da279] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test0023_checkAddCompWoPerson()[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:20:01 IST" name="test0023_checkAddCompWoPerson" finished-at="2022-11-15T18:20:38 IST" duration-ms="36589" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[CHECKING ADD COMPANY WITHOUT PERSON<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- test0023_checkAddCompWoPerson -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:20:38 IST" name="afterMethod" finished-at="2022-11-15T18:21:38 IST" duration-ms="60386" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Company.test0024_checkAddCompWithExPerson()[pri:0, instance:libra_Module.Company@437da279] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test0024_checkAddCompWithExPerson()[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:21:38 IST" name="test0024_checkAddCompWithExPerson" finished-at="2022-11-15T18:22:21 IST" duration-ms="42844" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[CHECKING ADD COMPANY WITH EXISTING PERSON<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- test0024_checkAddCompWithExPerson -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:22:21 IST" name="afterMethod" finished-at="2022-11-15T18:22:22 IST" duration-ms="1080" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Company.test0025_checkAddCompWithMulExPerson()[pri:0, instance:libra_Module.Company@437da279] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test0025_checkAddCompWithMulExPerson()[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:22:22 IST" name="test0025_checkAddCompWithMulExPerson" finished-at="2022-11-15T18:22:43 IST" duration-ms="20614" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[CHECKING ADD COMPANY WITH MULTIPLE EXISTING PERSON<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- test0025_checkAddCompWithMulExPerson -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:22:43 IST" name="afterMethod" finished-at="2022-11-15T18:22:44 IST" duration-ms="1085" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Company.test0026_checkAddCompWithNewPerson()[pri:0, instance:libra_Module.Company@437da279] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test0026_checkAddCompWithNewPerson()[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:22:44 IST" name="test0026_checkAddCompWithNewPerson" finished-at="2022-11-15T18:23:04 IST" duration-ms="20273" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[CHECKING ADD COMPANY WITH NEW PERSON<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- test0026_checkAddCompWithNewPerson -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:23:04 IST" name="afterMethod" finished-at="2022-11-15T18:23:05 IST" duration-ms="1126" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Company.test0027_checkEditCompFromCard()[pri:0, instance:libra_Module.Company@437da279] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test0027_checkEditCompFromCard()[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:23:05 IST" name="test0027_checkEditCompFromCard" finished-at="2022-11-15T18:23:24 IST" duration-ms="18481" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[CHECKING EDIT COMPANY FROM CARD OPTION<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- test0027_checkEditCompFromCard -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:23:24 IST" name="afterMethod" finished-at="2022-11-15T18:23:25 IST" duration-ms="1090" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=Company.test0028_checkEditCompInnerPageEditCompInnerPage()[pri:0, instance:libra_Module.Company@437da279] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test0028_checkEditCompInnerPageEditCompInnerPage()[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:23:25 IST" name="test0028_checkEditCompInnerPageEditCompInnerPage" finished-at="2022-11-15T18:23:45 IST" duration-ms="19830" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[CHECKING EDIT COMPANY FROM INNER PAGE<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- test0028_checkEditCompInnerPageEditCompInnerPage -->
        <test-method is-config="true" signature="aftertest()[pri:0, instance:libra_Module.Company@437da279]" started-at="2022-11-15T18:23:45 IST" name="aftertest" finished-at="2022-11-15T18:23:45 IST" duration-ms="233" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftertest -->
      </class> <!-- libra_Module.Company -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
