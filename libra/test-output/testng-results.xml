<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="1" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[CHECKING LOGIN WITH VALID EMAIL AND VAILD PASSWORD<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
    </line>
    <line>
      <![CDATA[CHECKING ADD CASE MANUALLY<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
    </line>
  </reporter-output>
  <suite started-at="2022-11-26T16:40:36 IST" name="Default suite" finished-at="2022-11-26T16:40:54 IST" duration-ms="17527">
    <groups>
      <group name="sanity">
        <method signature="AddCase.test0001_checkLogin()[pri:0, instance:libra_Module.AddCase@6404f418]" name="test0001_checkLogin" class="libra_Module.AddCase"/>
        <method signature="AddCase.test19_checkAddCaseManually()[pri:0, instance:libra_Module.AddCase@6404f418]" name="test19_checkAddCaseManually" class="libra_Module.AddCase"/>
      </group> <!-- sanity -->
    </groups>
    <test started-at="2022-11-26T16:40:36 IST" name="Default test" finished-at="2022-11-26T16:40:54 IST" duration-ms="17527">
      <class name="libra_Module.AddCase">
        <test-method is-config="true" signature="openbrowser()[pri:0, instance:libra_Module.AddCase@6404f418]" started-at="2022-11-26T16:40:36 IST" name="openbrowser" finished-at="2022-11-26T16:40:38 IST" duration-ms="1627" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbrowser -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:libra_Module.AddCase@6404f418]" started-at="2022-11-26T16:40:38 IST" name="beforeMethod" finished-at="2022-11-26T16:40:39 IST" duration-ms="1101" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void libra_Module.AddCase.test0001_checkLogin() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test0001_checkLogin()[pri:0, instance:libra_Module.AddCase@6404f418]" started-at="2022-11-26T16:40:39 IST" name="test0001_checkLogin" finished-at="2022-11-26T16:40:42 IST" duration-ms="3120" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[CHECKING LOGIN WITH VALID EMAIL AND VAILD PASSWORD<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- test0001_checkLogin -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:libra_Module.AddCase@6404f418]" started-at="2022-11-26T16:40:42 IST" name="beforeMethod" finished-at="2022-11-26T16:40:43 IST" duration-ms="1102" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void libra_Module.AddCase.test19_checkAddCaseManually() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test19_checkAddCaseManually()[pri:0, instance:libra_Module.AddCase@6404f418]" started-at="2022-11-26T16:40:43 IST" name="test19_checkAddCaseManually" finished-at="2022-11-26T16:40:54 IST" duration-ms="10545" status="FAIL">
          <exception class="org.openqa.selenium.remote.UnreachableBrowserException">
            <message>
              <![CDATA[Error communicating with the remote browser. It may have died.
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'DESKTOP-LHQEHTF', ip: '192.168.29.221', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.3'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [1d81c6ecebfaf82483f69a0bfcc2b5d9, findElement {using=xpath, value= //*[@class='form-group court-type']/div [6]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 107.0.5304.108, chrome: {chromedriverVersion: 106.0.5249.61 (511755355844..., userDataDir: C:\Users\VAKILS~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:64187}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:64187/devtoo..., se:cdpVersion: 107.0.5304.108, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 1d81c6ecebfaf82483f69a0bfcc2b5d9]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.remote.UnreachableBrowserException: Error communicating with the remote browser. It may have died.
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'DESKTOP-LHQEHTF', ip: '192.168.29.221', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.3'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [1d81c6ecebfaf82483f69a0bfcc2b5d9, findElement {using=xpath, value= //*[@class='form-group court-type']/div [6]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 107.0.5304.108, chrome: {chromedriverVersion: 106.0.5249.61 (511755355844..., userDataDir: C:\Users\VAKILS~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:64187}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:64187/devtoo..., se:cdpVersion: 107.0.5304.108, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 1d81c6ecebfaf82483f69a0bfcc2b5d9
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:571)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:365)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:357)
at selenium_module_Test.CommonFunctions.forloopClick(CommonFunctions.java:152)
at libra_Test.LibraComFun.CaseDetails(LibraComFun.java:482)
at libra_Test.AddCaseTest.AddCaseManually(AddCaseTest.java:646)
at libra_Module.AddCase.test19_checkAddCaseManually(AddCase.java:208)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.io.UncheckedIOException: java.net.SocketException: Connection reset
at org.openqa.selenium.remote.http.netty.NettyHttpHandler.makeCall(NettyHttpHandler.java:73)
at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42)
at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56)
at org.openqa.selenium.remote.http.netty.NettyHttpHandler.execute(NettyHttpHandler.java:49)
at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42)
at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56)
at org.openqa.selenium.remote.http.netty.NettyClient.execute(NettyClient.java:98)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:181)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)
... 36 more
Caused by: java.net.SocketException: Connection reset
at java.base/sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:394)
at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:426)
at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:258)
at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:722)
at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)
at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)
at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)
at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.remote.UnreachableBrowserException -->
          <reporter-output>
            <line>
              <![CDATA[CHECKING ADD CASE MANUALLY<b> <font color='blue' font size = 4> ==> PASS</font></b>]]>
            </line>
          </reporter-output>
        </test-method> <!-- test19_checkAddCaseManually -->
      </class> <!-- libra_Module.AddCase -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
